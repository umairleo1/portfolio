name: 🔍 Pull Request Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

# Minimal permissions for PR checks (2025 security)
permissions:
  contents: read
  pull-requests: write
  checks: write
  security-events: write

jobs:
  # Security scanning for PRs
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v3.28.0
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Full validation for ready PRs with enhanced matrix
  validate:
    name: 🧪 Validate Changes
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    needs: security-scan
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [20, 22]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.10.2
        with:
          disable-sudo: true
          disable-file-monitoring: true

      - name: Checkout PR
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies with cache
        run: npm ci --prefer-offline --no-audit

      - name: Run linting with annotations
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests with coverage
        run: npm run test:ci

      - name: Build application
        run: npm run build
        env:
          PUBLIC_URL: /portfolio
          NODE_ENV: production
          GENERATE_SOURCEMAP: false

      - name: Security audit (critical only)
        run: npm run security:audit:ci

      - name: Bundle size analysis
        if: matrix.node-version == 20
        run: |
          npm run build:analyze || echo "Bundle analysis failed - non-critical"

  # Enhanced PR status reporting
  pr-report:
    name: 📋 PR Status Report
    runs-on: ubuntu-latest
    needs: [security-scan, validate]
    if: always() && github.event.pull_request.draft == false
    steps:
      - name: Generate PR status report
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha
            });

            const securityStatus = '${{ needs.security-scan.result }}';
            const validateStatus = '${{ needs.validate.result }}';

            const statusEmoji = {
              'success': '✅',
              'failure': '❌',
              'cancelled': '⏹️',
              'skipped': '⏭️'
            };

            const report = `## 🔍 PR Analysis Report

            ### Security Scan: ${statusEmoji[securityStatus] || '⏳'} ${securityStatus}
            ### Validation: ${statusEmoji[validateStatus] || '⏳'} ${validateStatus}

            ### 📊 Quality Metrics
            - **Node.js Versions**: 20 LTS, 22 Current
            - **Security Scanning**: Trivy vulnerability scanner
            - **Code Quality**: ESLint, TypeScript, Tests
            - **Build Verification**: Production build test

            ${securityStatus === 'success' && validateStatus === 'success' ? 
              '🎉 **All checks passed!** This PR is ready for review.' : 
              '⚠️ Some checks failed. Please review the errors above.'}

            ---
            *Generated by GitHub Actions • ${new Date().toISOString()}*
            `;

            // Update or create comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });

            const existingComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('PR Analysis Report')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: report
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: report
              });
            }
