name: Emergency Hotfix

on:
  workflow_dispatch:
    inputs:
      description:
        description: 'Emergency fix description'
        required: true
        type: string
      skip_tests:
        description: 'Skip tests for emergency deployment'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: 'hotfix'
  cancel-in-progress: false

jobs:
  hotfix-deploy:
    name: Emergency Hotfix Deploy
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci --prefer-offline --no-audit

      - name: Quality checks
        run: |
          npm run type-check
          if [[ "${{ inputs.skip_tests }}" != "true" ]]; then
            timeout 5m npm run test:ci || exit 1
          fi
          npm run security:audit:ci

      - name: Build
        run: |
          export PUBLIC_URL="/portfolio"
          export NODE_ENV="production"
          export GENERATE_SOURCEMAP="false"
          export REACT_APP_VERSION="hotfix-${{ github.run_number }}"
          export REACT_APP_BUILD_TIME="${{ github.run_number }}"
          export REACT_APP_COMMIT_SHA="${{ github.sha }}"
          export REACT_APP_GOOGLE_ANALYTICS_ID="${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID }}"
          export REACT_APP_EMAILJS_SERVICE_ID="${{ secrets.REACT_APP_EMAILJS_SERVICE_ID }}"
          export REACT_APP_EMAILJS_TEMPLATE_ID="${{ secrets.REACT_APP_EMAILJS_TEMPLATE_ID }}"
          export REACT_APP_EMAILJS_PUBLIC_KEY="${{ secrets.REACT_APP_EMAILJS_PUBLIC_KEY }}"
          npm run build

      - uses: actions/configure-pages@v5.0.0
      - uses: actions/upload-pages-artifact@v4.0.0
        with:
          path: build/
      - id: deployment
        uses: actions/deploy-pages@v4.0.5

      - name: Summary
        run: |
          echo "## Emergency Hotfix Deployed" >> $GITHUB_STEP_SUMMARY
          echo "- **Reason**: ${{ inputs.description }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: hotfix-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "::warning::Follow up with proper semantic release"
